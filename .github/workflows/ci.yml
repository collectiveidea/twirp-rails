name: CI

on:
  push:
    branches:
      - main

  pull_request:

jobs:
  versions:
    name: Get latest versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        product: ["ruby", "rails"]
    outputs:
      ruby: ${{ steps.supported.outputs.ruby }}
      rails: ${{ steps.supported.outputs.rails }}
    steps:
      - id: supported
        run: |
          product="${{ matrix.product }}"
          data=$(curl https://endoflife.date/api/$product.json)
          supported=$(echo $data | jq '[.[] | select(.eol > (now | strftime("%Y-%m-%d")))]')
          echo "${product}=$(echo $supported | jq -c 'map(.latest)')" >> $GITHUB_OUTPUT
  build:
    needs: versions
    runs-on: ubuntu-latest
    name: Test on Ruby ${{ matrix.ruby }} and Rails ${{ matrix.rails }}
    strategy:
      fail-fast: false
      matrix:
        ruby: ${{ fromJSON(needs.versions.outputs.ruby) }}
        rails: ${{ fromJSON(needs.versions.outputs.rails) }}

    env:
      RAILS_VERSION: ${{ matrix.rails }}
      RUBYOPT: --enable=frozen-string-literal

    steps:
    - uses: actions/checkout@v3
    - name: Set up Ruby
      id: setup-ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true
      continue-on-error: true
    - name: Incompatible Versions
      if: steps.setup-ruby.outcome == 'failure'
      run: echo "Ruby ${{ matrix.ruby }} is not supported with Rails ${{ matrix.rails }}"
    - name: Run the default task
      if: steps.setup-ruby.outcome != 'failure'
      run: bundle exec rake
